name: S905D KERNEL test1

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      set_54x:
        description: "KERNEL: 5.4.x / none"
        required: false
        default: "none"
env:
  REPO_URL: https://github.com/unifreq/linux-5.4.y
  REPO_BRANCH: main
  BUILD_DIR: /tmp/kernel
  SERVERCHAN_SCKEY: true
  KVER: 5.4.y
  TOOLCHAIN: https://snapshots.linaro.org/gnu-toolchain/11.2-2021.12-1/aarch64-linux-gnu/gcc-linaro-11.2.1-2021.12-x86_64_aarch64-linux-gnu.tar.xz
  ARMBIAN_VER: Armbian_22.02.0_Aml_s905d_bullseye_5.10.100_2022.02.12.0039
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: telegrame_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
          您正在使用kissyouhunter仓库编译N1内核5.4.y,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi

    - name: choose kernel
      run: |
        set_54x="${{ github.event.inputs.set_54x }}"
        echo "KERNEL_5_4_Y=${set_54x}" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Host info
      run: |
        pwd
        ls -lah
        lscpu
        free -h
        df -h 

    - name: Initialization environment
      env:
         DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-server)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean   
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}          
        
    - name: Build Kernel  
      run: |
        mkdir -p /tmp/upload/${KERNEL_5_4_Y} && cd /tmp/upload && curl -LO https://github.com/kissyouhunter/kernel_N1/releases/download/armbian/linux-${KVER}.tar.gz
        curl -LO https://github.com/kissyouhunter/kernel_N1/releases/download/armbian/${ARMBIAN_VER}.img.gz
        gzip -d ${ARMBIAN_VER}.img.gz
        loop_armbian=$(sudo losetup -P -f --show "${ARMBIAN_VER}.img")
        sudo mount ${loop_armbian}p2 /mnt/ && sudo mount ${loop_armbian}p1 /mnt/boot/
        cd /mnt/ && sudo chroot .
        cd root
        new_kernel=${KERNEL_5_4_Y}-kissyouhunter
        old_kernel=5.10.100-kissyouhunter
        kernel_code=linux-5.4.y
        root_path=/root
        boot_path=/boot
        dtb_path=/boot/dtb/amlogic
        new_dtb_path=/arch/arm64/boot/dts/amlogic
        modules_path=/usr/lib/modules
        tar zxvf ${kernel_code}.tar.gz
        rm -f ${kernel_code}.tar.gz
        mv ${kernel_code} ${new_kernel}
        cd ${new_kernel}
        make modules_install && make install
        cd ${boot_path} && cp -r vmlinuz-${new_kernel} zImage && cp -r uInitrd uInitrd-${new_kernel}
        cd ${dtb_path} && rm -f *
        cp ${root_path}/${new_kernel}/${new_dtb_path}/*.dtb ${dtb_path}
        cd ${boot_path} && tar zcvf boot-${new_kernel}.tar.gz *-${new_kernel} && cp -r boot-${new_kernel}.tar.gz ${root_path}
        cd ${dtb_path} && tar zcvf dtb-amlogic-${new_kernel}.tar.gz *.dtb && cp -r dtb-amlogic-${new_kernel}.tar.gz ${root_path}
        cd ${modules_path} && tar zcvf modules-${new_kernel}.tar.gz ${new_kernel} && cp -r modules-${new_kernel}.tar.gz ${root_path}
        rm -r ${boot_path}/*-${old_kernel} && rm -r ${modules_path}/${old_kernel}
        rm -r ${boot_path}/boot-${new_kernel}.tar.gz
        rm -r ${dtb_path}/dtb-amlogic-${new_kernel}.tar.gz
        rm -r ${modules_path}/modules-${new_kernel}.tar.gz
        rm -rf ${root_path}/${new_kernel}
        exit
        sudo cp /mnt/root/boot-${KERNEL_5_4_Y}-kissyouhunter.tar.gz /tmp/upload/${KERNEL_5_4_Y}
        sudo cp /mnt/root/dtb-amlogic-${KERNEL_5_4_Y}-kissyouhunter.tar.gz /tmp/upload/${KERNEL_5_4_Y}
        sudo cp /mnt/root/modules-${KERNEL_5_4_Y}-kissyouhunter.tar.gz /tmp/upload/${KERNEL_5_4_Y}
        cd /tmp/upload/ && tar -zcvf ${KERNEL_5_4_Y}.tar.gz ${KERNEL_5_4_Y}
        sudo umount /mnt/boot/ && sudo umount /mnt/
        sudo losetup -d ${loop_armbian}
        rm -rf ${KERNEL_5_4_Y} && rm -f ${ARMBIAN_VER}.img

    - name: Organize files
      id: organize
      run: |
        cd /tmp/upload
        rm -f ${ARMBIAN_VER}.img
        echo "KERNEL=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload kernel directory
      uses: kittaakos/upload-artifact-as-is@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        path: ${{ env.KERNEL }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 4
        
    - name: telegram_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
          您使用kissyouhunter仓库编译N1内核5.4.y顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
