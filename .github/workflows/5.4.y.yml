name: S905D KERNEL 5.4.y

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
env:
  REPO_URL: https://github.com/unifreq/linux-5.4.y
  REPO_BRANCH: main
  BUILD_DIR: /tmp/kernel
  SERVERCHAN_SCKEY: true
  KVER: 5.4.y
  TOOLCHAIN: https://snapshots.linaro.org/gnu-toolchain/11.2-2021.12-1/aarch64-linux-gnu/gcc-linaro-11.2.1-2021.12-x86_64_aarch64-linux-gnu.tar.xz
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: telegrame_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
          您正在使用kissyouhunter仓库编译N1内核5.4.y,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
        
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Host info
      run: |
        pwd
        ls -lah
        lscpu
        free -h
        df -h 
        
    - name: Installing requirements 
      run: |
        sudo apt-get update
        sudo apt-get install -y git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison libncurses-dev autoconf dkms libudev-dev libpci-dev libiberty-dev u-boot-tools lzop
        
    - name: Clone repos
      run: |
        git clone $REPO_URL -b $REPO_BRANCH $BUILD_DIR
        
    - name: Installing cross compile toolchain
      run: |
        cd /opt
        sudo wget $TOOLCHAIN
        sudo tar -xvf gcc-linaro-11.2.1-2021.12-x86_64_aarch64-linux-gnu.tar.xz
        cd $BUILD_DIR
        rm -f set_*
        cp $GITHUB_WORKSPACE/files/5.4/set_clean set_clean -v
        cp $GITHUB_WORKSPACE/files/5.4/set_dtb set_dtb -v
        cp $GITHUB_WORKSPACE/files/5.4/set_make set_make -v
        cp $GITHUB_WORKSPACE/files/5.4/set_menuconfig set_menuconfig -v
        cp $GITHUB_WORKSPACE/files/5.4/.config .config -v
        chmod 755 set_*
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}          
        
    - name: Build Kernel  
      run: |
        cd $BUILD_DIR                    
        ./set_make
        
    - name: Organize files
      id: organize
      run: |
        cd /tmp && mv kernel/ linux-$KVER && tar -zcvf linux-$KVER.tar.gz linux-$KVER/
        mkdir -p /tmp/upload && cp /tmp/linux-$KVER.tar.gz /tmp/upload && cd /tmp/upload
        echo "KERNEL=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload kernel directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: linux-${{ env.KVER }}
        path: ${{ env.KERNEL }}
        
    - name: telegram_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
          您使用kissyouhunter仓库编译N1内核5.4.y顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
